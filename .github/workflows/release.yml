name: build-and-release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

permissions:
  contents: write

jobs:
  build:
    name: build-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Build (release)
        run: cargo build --release

      - name: Package artifact (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set -euxo pipefail
          BIN_NAME="flowchart_tool"
          mkdir -p dist
          cp target/release/${BIN_NAME} dist/
          tar -C dist -czf ${BIN_NAME}-${{ runner.os }}-x86_64.tar.gz ${BIN_NAME}
          echo "ASSET=${BIN_NAME}-${{ runner.os }}-x86_64.tar.gz" >> $GITHUB_ENV

      - name: Package artifact (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $bin = "flowchart_tool.exe"
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item "target/release/$bin" dist/
          $archive = "flowchart_tool-Windows-x86_64.zip"
          Compress-Archive -Path "dist/$bin" -DestinationPath $archive -Force
          "ASSET=$archive" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET }}
          path: ${{ env.ASSET }}
          if-no-files-found: error

  release:
    name: create-release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: |
          ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          generate_release_notes: true
          files: |
            artifacts/**/flowchart_tool-*.tar.gz
            artifacts/**/flowchart_tool-*.zip
